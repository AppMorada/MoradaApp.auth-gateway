name: CI - Tests & Lint

env:
  NODE_ENV: ${{ secrets.NODE_ENV }}
  LOGGING_PROJECT: ${{ secrets.LOGGING_PROJECT }}
  FIRESTORE_GCP_PROJECT: ${{ secrets.FIRESTORE_GCP_PROJECT }}
  FIRESTORE_EMULATOR_HOST: ${{ secrets.FIRESTORE_EMULATOR_HOST }}
  URL_TO_REDIRECT: ${{ secrets.URL_TO_REDIRECT }}
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  ZIPKIN_TRACE_URL: ${{ secrets.ZIPKIN_TRACE_URL }}
  SERVICE_NAME: ${{ secrets.SERVICE_NAME }}
  SERVICE_VERSION: ${{ secrets.SERVICE_VERSION }}
  CREATE_KEY_FUNC_URL: ${{ secrets.CREATE_KEY_FUNC_URL }}
  OBSERVER_AGENT: ${{ secrets.OBSERVER_AGENT }}

on:
  push:
    branches:
      - '**'
      - '!main'
      - '!release/**'

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-latest, macos-latest, ubuntu-latest ]
        node: [ 16, 18, 20 ]
    steps:
      - uses: actions/checkout@v4
        id: git-clone
        name: Cloning repository

      - uses: pnpm/action-setup@v4
        id: install-pnpm
        name: Installing PNPM
        with:
          version: 8

      - name: Install Node.js
        uses: actions/setup-node@v4
        id: set-nodejs
        with:
          node-version: ${{ matrix.node }}
          cache: "pnpm"

      - name: Install dependencies
        id: set-deps
        run: pnpm install --frozen-lockfile
        
      - name: Run all tests
        id: test
        run: pnpm run test:unit

  e2e-test:
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres
        env:
          POSTGRES_DB: "mydb"
          POSTGRES_USER: "postgres"
          POSTGRES_PASSWORD: "password"
        ports:
          - 5432:5432
      firestore:
        image: nicolascbv/local-fire
        ports:
          - 8081:8081
        env:
          FIRESTORE_PROJECT_ID: ${{ secrets.FIRESTORE_GCP_PROJECT }}
          PORT: 8081
    steps:
      - uses: actions/checkout@v4
        id: git-clone
        name: Cloning repository

      - uses: pnpm/action-setup@v4
        id: install-pnpm
        name: Installing PNPM
        with:
          version: 8

      - name: Install Node.js
        uses: actions/setup-node@v4
        id: set-nodejs
        with:
          node-version: 18.x
          cache: "pnpm"

      - name: Install dependencies
        id: set-deps
        run: pnpm install --frozen-lockfile

      - name: Generate seed
        id: seed
        run: pnpm run seed
        
      - name: Run all tests
        id: e2e-test
        env: 
          NODE_ENV: production
        run: pnpm run test:e2e

  eslint:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ macos-latest, ubuntu-latest ]
    steps:
      - uses: actions/checkout@v4
        id: git-clone
        name: Cloning repository

      - uses: pnpm/action-setup@v4
        id: install-pnpm
        name: Installing PNPM
        with:
          version: 8

      - name: Install Node.js
        uses: actions/setup-node@v4
        id: set-nodejs
        with:
          node-version: 20.x
          cache: "pnpm"

      - name: Install dependencies
        id: set-deps
        run: pnpm install --frozen-lockfile

      - name: Run Eslint
        id: eslint
        run: pnpm run lint
